server:
  port: 9000

spring:
  thymeleaf:
    cache: false
  security:
    oauth2:
      authorizationserver:
        issuer: "http://localhost:9000"
        client:
          messaging-client:
            registration:
              client-id: "messaging-client"
              client-secret: "{noop}secret"
              client-authentication-methods:
                - "client_secret_basic"
              authorization-grant-types:
                - "authorization_code"
                - "refresh_token"
                - "client_credentials"
              redirect-uris:
                - "http://127.0.0.1:8080/login/oauth2/code/messaging-client-oidc"
                - "http://127.0.0.1:8080/authorized"
              post-logout-redirect-uris:
                - "http://127.0.0.1:8080/logged-out"
              scopes:
                - "openid"
                - "profile"
                - "email"
                - "address"
                - "phone"
                - "message.read"
                - "message.write"
            require-authorization-consent: true
            token:
              access-token-time-to-live: PT5M
              refresh-token-time-to-live: PT10M
              reuse-refresh-tokens: true
      client:
        registration:
          google-idp:
            provider: google
            client-id: ${GOOGLE_CLIENT_ID:google-client-id}
            client-secret: ${GOOGLE_CLIENT_SECRET:google-client-secret}
            scope: openid, https://www.googleapis.com/auth/userinfo.profile, https://www.googleapis.com/auth/userinfo.email
            client-name: Sign in with Google
          github-idp:
            provider: github
            client-id: 0fbb4585ef3eb16bbe8b
            client-secret: 4cd5b762e818556145eda960d67d24bc83750f85
            scope: user:email, read:user
            client-name: Sign in with GitHub
          okta-idp:
            provider: okta
            client-id: 0oa1s2nzpl2PI1xy20h8
            client-secret: K0UZFyVlw1J3UB9Be-zbMRAqYZLTm3eWoERmFQuM26ciX7pqPDspROfGh0MBHom4
            scope: openid, profile, email, address, phone
            client-name: Sign in with Okta
        provider:
          google:
            user-name-attribute: email
          github:
            user-name-attribute: login
          okta:
            user-name-attribute: email
            issuer-uri: https://dev-898029.oktapreview.com
            #authorization-uri: https://dev-898029.oktapreview.com/oauth2/v1/authorize
            #token-uri: https://dev-898029.oktapreview.com/oauth2/v1/token
            #user-info-uri: https://dev-898029.oktapreview.com/oauth2/v1/userinfo
            #jwk-set-uri: https://dev-898029.oktapreview.com/oauth2/v1/keys

logging:
  file:
    name: auth-server.log
  level:
    root: INFO
    '[org.springframework.http]': TRACE
    '[org.springframework.web]': TRACE
    '[org.springframework.security]': TRACE
    '[org.springframework.security.oauth2]': TRACE

jwk:
  public-key: classpath:rsa_public_key.pem
  private-key: classpath:pkcs8_rsa_private_key.pem
